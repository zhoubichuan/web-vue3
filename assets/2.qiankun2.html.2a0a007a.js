import{_ as s,o as n,c as a,a as l}from"./app.8390b8a1.js";const p={},e=l(`<h1 id="\u4E8C-qiankun-\u6E90\u7801\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#\u4E8C-qiankun-\u6E90\u7801\u89E3\u6790" aria-hidden="true">#</a> \u4E8C.qiankun\uFF08\u6E90\u7801\u89E3\u6790\uFF09</h1><ul><li><p><code>qiankun@2.6.3</code>\u9879\u76EE\u76EE\u5F55\u7ED3\u6784</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#ffffff;"><code><span class="line"><span style="color:#24292F;">\u251C\u2500\u2500 src              </span><span style="color:#6E7781;"># \u6E90\u7801\u6587\u4EF6\u5939</span></span>
<span class="line"><span style="color:#24292F;">\u2502   \u251C\u2500\u2500 assets       </span><span style="color:#6E7781;"># \u5B58\u653E\u7EC4\u4EF6\u4E2D\u7684\u9759\u6001\u8D44\u6E90</span></span>
<span class="line"><span style="color:#24292F;">\u2502   \u251C\u2500\u2500 apis.ts   </span><span style="color:#6E7781;"># \u5B58\u653E\u4E00\u4E9B\u516C\u5171\u7EC4\u4EF6</span></span>
<span class="line"><span style="color:#24292F;">\u2502   \u251C\u2500\u2500 effects.ts        </span><span style="color:#6E7781;"># \u5B58\u653E\u6240\u6709\u7684\u8DEF\u7531\u7EC4\u4EF6</span></span>
<span class="line"><span style="color:#24292F;">\u2502   \u251C\u2500\u2500 error.ts      </span><span style="color:#6E7781;"># \u5E94\u7528\u6839\u4E3B\u7EC4\u4EF6</span></span>
<span class="line"><span style="color:#24292F;">\u2502   \u251C\u2500\u2500 index.ts      </span><span style="color:#6E7781;"># \u5E94\u7528\u5165\u53E3</span></span>
<span class="line"><span style="color:#24292F;">\u2502   \u251C\u2500\u2500 router       </span><span style="color:#6E7781;"># \u8DEF\u7531\u914D\u7F6E\u6587\u4EF6</span></span>
<span class="line"><span style="color:#24292F;">\u2502   \u2514\u2500\u2500 store        </span><span style="color:#6E7781;"># vuex\u72B6\u6001\u7BA1\u7406\u6587\u4EF6</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="_1-\u5165\u53E3" tabindex="-1"><a class="header-anchor" href="#_1-\u5165\u53E3" aria-hidden="true">#</a> 1.\u5165\u53E3</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#ffffff;"><code><span class="line"><span style="color:#CF222E;">export</span><span style="color:#24292F;"> { loadMicroApp, registerMicroApps, start } </span><span style="color:#CF222E;">from</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">&quot;./apis&quot;</span></span>
<span class="line"><span style="color:#CF222E;">export</span><span style="color:#24292F;"> { initGlobalState } </span><span style="color:#CF222E;">from</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">&quot;./globalState&quot;</span></span>
<span class="line"><span style="color:#CF222E;">export</span><span style="color:#24292F;"> { getCurrentRunningApp </span><span style="color:#CF222E;">as</span><span style="color:#24292F;"> __internalGetCurrentRunningApp } </span><span style="color:#CF222E;">from</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">&quot;./sandbox&quot;</span></span>
<span class="line"><span style="color:#CF222E;">export</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">*</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">from</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">&quot;./errorHandler&quot;</span></span>
<span class="line"><span style="color:#CF222E;">export</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">*</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">from</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">&quot;./effects&quot;</span></span>
<span class="line"><span style="color:#CF222E;">export</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">*</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">from</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">&quot;./interfaces&quot;</span></span>
<span class="line"><span style="color:#CF222E;">export</span><span style="color:#24292F;"> { prefetchImmediately </span><span style="color:#CF222E;">as</span><span style="color:#24292F;"> prefetchApps } </span><span style="color:#CF222E;">from</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">&quot;./prefetch&quot;</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><div class="highlight-line">\xA0</div><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-apis" tabindex="-1"><a class="header-anchor" href="#_2-apis" aria-hidden="true">#</a> 2.apis</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#ffffff;"><code><span class="line"><span style="color:#CF222E;">let</span><span style="color:#24292F;"> microApps</span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> </span><span style="color:#953800;">Array</span><span style="color:#24292F;">&lt;</span><span style="color:#953800;">RegistrableApp</span><span style="color:#24292F;">&lt;</span><span style="color:#953800;">Record</span><span style="color:#24292F;">&lt;</span><span style="color:#0550AE;">string</span><span style="color:#24292F;">, </span><span style="color:#0550AE;">unknown</span><span style="color:#24292F;">&gt;&gt;&gt; </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> []</span></span>
<span class="line"><span style="color:#CF222E;">export</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">let</span><span style="color:#24292F;"> frameworkConfiguration</span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> </span><span style="color:#953800;">FrameworkConfiguration</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> {};</span></span>
<span class="line"><span style="color:#CF222E;">export</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">function</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">registerMicroApps</span><span style="color:#24292F;">&lt;</span><span style="color:#953800;">T</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">extends</span><span style="color:#24292F;"> </span><span style="color:#953800;">ObjectType</span><span style="color:#24292F;">&gt;(</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#953800;">apps</span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> </span><span style="color:#953800;">Array</span><span style="color:#24292F;">&lt;</span><span style="color:#953800;">RegistrableApp</span><span style="color:#24292F;">&lt;</span><span style="color:#953800;">T</span><span style="color:#24292F;">&gt;&gt;,</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#953800;">lifeCycles</span><span style="color:#CF222E;">?:</span><span style="color:#24292F;"> </span><span style="color:#953800;">FrameworkLifeCycles</span><span style="color:#24292F;">&lt;</span><span style="color:#953800;">T</span><span style="color:#24292F;">&gt;</span></span>
<span class="line"><span style="color:#24292F;">) {</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#6E7781;">// Each app only needs to be registered once</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">unregisteredApps</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> apps.</span><span style="color:#8250DF;">filter</span><span style="color:#24292F;">(</span></span>
<span class="line"><span style="color:#24292F;">    (</span><span style="color:#953800;">app</span><span style="color:#24292F;">) </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">!</span><span style="color:#24292F;">microApps.</span><span style="color:#8250DF;">some</span><span style="color:#24292F;">((</span><span style="color:#953800;">registeredApp</span><span style="color:#24292F;">) </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> registeredApp.name </span><span style="color:#CF222E;">===</span><span style="color:#24292F;"> app.name)</span></span>
<span class="line"><span style="color:#24292F;">  ) </span><span style="color:#6E7781;">//\u9009\u51FA\u672A\u6CE8\u518C\u7684\u5B50\u9879\u76EE</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">  microApps </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> [</span><span style="color:#CF222E;">...</span><span style="color:#24292F;">microApps, </span><span style="color:#CF222E;">...</span><span style="color:#24292F;">unregisteredApps] </span><span style="color:#6E7781;">//\u6CE8\u518C\u5B50\u9879\u76EE</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">  unregisteredApps.</span><span style="color:#8250DF;">forEach</span><span style="color:#24292F;">((</span><span style="color:#953800;">app</span><span style="color:#24292F;">) </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> {</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> { </span><span style="color:#0550AE;">name</span><span style="color:#24292F;">, </span><span style="color:#0550AE;">activeRule</span><span style="color:#24292F;">, </span><span style="color:#0550AE;">loader</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> noop, </span><span style="color:#0550AE;">props</span><span style="color:#24292F;">, </span><span style="color:#CF222E;">...</span><span style="color:#0550AE;">appConfig</span><span style="color:#24292F;"> } </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#8250DF;">registerApplication</span><span style="color:#24292F;">({</span></span>
<span class="line"><span style="color:#24292F;">      </span><span style="color:#6E7781;">//\u8C03\u7528single-spa\u7684\u65B9\u6CD5\u6CE8\u518C\u5B50\u9879\u76EE</span></span>
<span class="line"><span style="color:#24292F;">      name,</span></span>
<span class="line"><span style="color:#24292F;">      </span><span style="color:#8250DF;">app</span><span style="color:#24292F;">: </span><span style="color:#CF222E;">async</span><span style="color:#24292F;"> () </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> {</span></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#8250DF;">loader</span><span style="color:#24292F;">(</span><span style="color:#0550AE;">true</span><span style="color:#24292F;">)</span></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#CF222E;">await</span><span style="color:#24292F;"> frameworkStartedDefer.promise </span><span style="color:#6E7781;">// promise\u7B49\u5F85resolve</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> { </span><span style="color:#0550AE;">mount</span><span style="color:#24292F;">, </span><span style="color:#CF222E;">...</span><span style="color:#0550AE;">otherMicroAppConfigs</span><span style="color:#24292F;"> } </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> (</span></span>
<span class="line"><span style="color:#24292F;">          </span><span style="color:#CF222E;">await</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">loadApp</span><span style="color:#24292F;">(</span></span>
<span class="line"><span style="color:#24292F;">            { name, props, </span><span style="color:#CF222E;">...</span><span style="color:#24292F;">appConfig },</span></span>
<span class="line"><span style="color:#24292F;">            frameworkConfiguration,</span></span>
<span class="line"><span style="color:#24292F;">            lifeCycles</span></span>
<span class="line"><span style="color:#24292F;">          )</span></span>
<span class="line"><span style="color:#24292F;">        )()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#CF222E;">return</span><span style="color:#24292F;"> {</span></span>
<span class="line"><span style="color:#24292F;">          mount: [</span></span>
<span class="line"><span style="color:#24292F;">            </span><span style="color:#CF222E;">async</span><span style="color:#24292F;"> () </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">loader</span><span style="color:#24292F;">(</span><span style="color:#0550AE;">true</span><span style="color:#24292F;">),</span></span>
<span class="line"><span style="color:#24292F;">            </span><span style="color:#CF222E;">...</span><span style="color:#8250DF;">toArray</span><span style="color:#24292F;">(mount),</span></span>
<span class="line"><span style="color:#24292F;">            </span><span style="color:#CF222E;">async</span><span style="color:#24292F;"> () </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">loader</span><span style="color:#24292F;">(</span><span style="color:#0550AE;">false</span><span style="color:#24292F;">),</span></span>
<span class="line"><span style="color:#24292F;">          ],</span></span>
<span class="line"><span style="color:#24292F;">          </span><span style="color:#CF222E;">...</span><span style="color:#24292F;">otherMicroAppConfigs,</span></span>
<span class="line"><span style="color:#24292F;">        }</span></span>
<span class="line"><span style="color:#24292F;">      },</span></span>
<span class="line"><span style="color:#24292F;">      activeWhen: activeRule,</span></span>
<span class="line"><span style="color:#24292F;">      customProps: props,</span></span>
<span class="line"><span style="color:#24292F;">    })</span></span>
<span class="line"><span style="color:#24292F;">  })</span></span>
<span class="line"><span style="color:#24292F;">}</span></span>
<span class="line"><span style="color:#CF222E;">export</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">function</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">start</span><span style="color:#24292F;">(</span><span style="color:#953800;">opts</span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> </span><span style="color:#953800;">FrameworkConfiguration</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> {}) {</span></span>
<span class="line"><span style="color:#24292F;">  frameworkConfiguration </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> {</span></span>
<span class="line"><span style="color:#24292F;">    prefetch: </span><span style="color:#0550AE;">true</span><span style="color:#24292F;">,</span></span>
<span class="line"><span style="color:#24292F;">    singular: </span><span style="color:#0550AE;">true</span><span style="color:#24292F;">,</span></span>
<span class="line"><span style="color:#24292F;">    sandbox: </span><span style="color:#0550AE;">true</span><span style="color:#24292F;">,</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">...</span><span style="color:#24292F;">opts,</span></span>
<span class="line"><span style="color:#24292F;">  }</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> {</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#0550AE;">prefetch</span><span style="color:#24292F;">,</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#0550AE;">sandbox</span><span style="color:#24292F;">,</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#0550AE;">singular</span><span style="color:#24292F;">,</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#0550AE;">urlRerouteOnly</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> defaultUrlRerouteOnly,</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">...</span><span style="color:#0550AE;">importEntryOpts</span></span>
<span class="line"><span style="color:#24292F;">  } </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> frameworkConfiguration</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">if</span><span style="color:#24292F;"> (prefetch) {</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#8250DF;">doPrefetchStrategy</span><span style="color:#24292F;">(microApps, prefetch, importEntryOpts)</span></span>
<span class="line"><span style="color:#24292F;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">  frameworkConfiguration </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">autoDowngradeForLowVersionBrowser</span><span style="color:#24292F;">(</span></span>
<span class="line"><span style="color:#24292F;">    frameworkConfiguration</span></span>
<span class="line"><span style="color:#24292F;">  )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#8250DF;">startSingleSpa</span><span style="color:#24292F;">({ urlRerouteOnly })</span></span>
<span class="line"><span style="color:#24292F;">  started </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">  frameworkStartedDefer.</span><span style="color:#8250DF;">resolve</span><span style="color:#24292F;">()</span></span>
<span class="line"><span style="color:#24292F;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-loader-ts" tabindex="-1"><a class="header-anchor" href="#_3-loader-ts" aria-hidden="true">#</a> 3.loader.ts</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#ffffff;"><code><span class="line"><span style="color:#CF222E;">export</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">async</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">function</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">loadApp</span><span style="color:#24292F;">&lt;</span><span style="color:#953800;">T</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">extends</span><span style="color:#24292F;"> </span><span style="color:#953800;">ObjectType</span><span style="color:#24292F;">&gt;(</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#953800;">app</span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> </span><span style="color:#953800;">LoadableApp</span><span style="color:#24292F;">&lt;</span><span style="color:#953800;">T</span><span style="color:#24292F;">&gt;,</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#953800;">configuration</span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> </span><span style="color:#953800;">FrameworkConfiguration</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> {},</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#953800;">lifeCycles</span><span style="color:#CF222E;">?:</span><span style="color:#24292F;"> </span><span style="color:#953800;">FrameworkLifeCycles</span><span style="color:#24292F;">&lt;</span><span style="color:#953800;">T</span><span style="color:#24292F;">&gt;</span></span>
<span class="line"><span style="color:#24292F;">)</span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> </span><span style="color:#953800;">Promise</span><span style="color:#24292F;">&lt;</span><span style="color:#953800;">ParcelConfigObjectGetter</span><span style="color:#24292F;">&gt; {</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> { </span><span style="color:#0550AE;">entry</span><span style="color:#24292F;">, </span><span style="color:#953800;">name</span><span style="color:#24292F;">: </span><span style="color:#0550AE;">appName</span><span style="color:#24292F;"> } </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> app</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">appInstanceId</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">genAppInstanceIdByName</span><span style="color:#24292F;">(appName)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">markName</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">\`[qiankun] App \${</span><span style="color:#24292F;">appInstanceId</span><span style="color:#0A3069;">} Loading\`</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">if</span><span style="color:#24292F;"> (p<wbr>rocess.env.</span><span style="color:#0550AE;">NODE_ENV</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">===</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">&quot;development&quot;</span><span style="color:#24292F;">) {</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#8250DF;">performanceMark</span><span style="color:#24292F;">(markName)</span></span>
<span class="line"><span style="color:#24292F;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> {</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#0550AE;">singular</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">false</span><span style="color:#24292F;">,</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#0550AE;">sandbox</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">true</span><span style="color:#24292F;">,</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#0550AE;">excludeAssetFilter</span><span style="color:#24292F;">,</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#0550AE;">globalContext</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> window,</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">...</span><span style="color:#0550AE;">importEntryOpts</span></span>
<span class="line"><span style="color:#24292F;">  } </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> configuration</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#6E7781;">// get the entry html content and script executor</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> { </span><span style="color:#0550AE;">template</span><span style="color:#24292F;">, </span><span style="color:#0550AE;">execScripts</span><span style="color:#24292F;">, </span><span style="color:#0550AE;">assetPublicPath</span><span style="color:#24292F;"> } </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">await</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">importEntry</span><span style="color:#24292F;">( </span><span style="color:#6E7781;">//\u6838\u5FC3\u90E8\u5206\u83B7\u53D6\u5B50\u5E94\u7528\u7684 HTML \u548C JS\uFF0C\u540C\u65F6\u5BF9 HTML \u548C JS \u8FDB\u884C\u4E86\u5404\u81EA\u7684\u5904\u7406\uFF0C\u4EE5\u4FBF\u4E8E\u5B50\u5E94\u7528\u5728\u7236\u5E94\u7528\u4E2D\u52A0\u8F7D</span></span>
<span class="line"><span style="color:#24292F;">    entry,</span></span>
<span class="line"><span style="color:#24292F;">    importEntryOpts</span></span>
<span class="line"><span style="color:#24292F;">  )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#6E7781;">// as single-spa load and bootstrap new app parallel with other apps unmounting</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#6E7781;">// (see https://github.com/CanopyTax/single-spa/blob/master/src/navigation/reroute.js#L74)</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#6E7781;">// we need wait to load the app until all apps are finishing unmount in singular mode</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">if</span><span style="color:#24292F;"> (</span><span style="color:#CF222E;">await</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">validateSingularMode</span><span style="color:#24292F;">(singular, app)) {</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">await</span><span style="color:#24292F;"> (prevAppUnmountedDeferred </span><span style="color:#CF222E;">&amp;&amp;</span><span style="color:#24292F;"> prevAppUnmountedDeferred.promise)</span></span>
<span class="line"><span style="color:#24292F;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">appContent</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">getDefaultTplWrapper</span><span style="color:#24292F;">(appInstanceId)(template)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">strictStyleIsolation</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">typeof</span><span style="color:#24292F;"> sandbox </span><span style="color:#CF222E;">===</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">&quot;object&quot;</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">&amp;&amp;</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">!!</span><span style="color:#24292F;">sandbox.strictStyleIsolation</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">if</span><span style="color:#24292F;"> (p<wbr>rocess.env.</span><span style="color:#0550AE;">NODE_ENV</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">===</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">&quot;development&quot;</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">&amp;&amp;</span><span style="color:#24292F;"> strictStyleIsolation) {</span></span>
<span class="line"><span style="color:#24292F;">    console.</span><span style="color:#8250DF;">warn</span><span style="color:#24292F;">(</span></span>
<span class="line"><span style="color:#24292F;">      </span><span style="color:#0A3069;">&quot;[qiankun] strictStyleIsolation configuration will be removed in 3.0, pls don&#39;t depend on it or use experimentalStyleIsolation instead!&quot;</span></span>
<span class="line"><span style="color:#24292F;">    )</span></span>
<span class="line"><span style="color:#24292F;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">scopedCSS</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">isEnableScopedCSS</span><span style="color:#24292F;">(sandbox)</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">let</span><span style="color:#24292F;"> initialAppWrapperElement</span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> </span><span style="color:#953800;">HTMLElement</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">|</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">null</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">createElement</span><span style="color:#24292F;">(</span></span>
<span class="line"><span style="color:#24292F;">    appContent,</span></span>
<span class="line"><span style="color:#24292F;">    strictStyleIsolation,</span></span>
<span class="line"><span style="color:#24292F;">    scopedCSS,</span></span>
<span class="line"><span style="color:#24292F;">    appInstanceId</span></span>
<span class="line"><span style="color:#24292F;">  )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">initialContainer</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">&quot;container&quot;</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">in</span><span style="color:#24292F;"> app </span><span style="color:#CF222E;">?</span><span style="color:#24292F;"> app.container </span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">undefined</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">legacyRender</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">&quot;render&quot;</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">in</span><span style="color:#24292F;"> app </span><span style="color:#CF222E;">?</span><span style="color:#24292F;"> app.render </span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">undefined</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">render</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">getRender</span><span style="color:#24292F;">(appInstanceId, appContent, legacyRender)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#6E7781;">// \u7B2C\u4E00\u6B21\u52A0\u8F7D\u8BBE\u7F6E\u5E94\u7528\u53EF\u89C1\u533A\u57DF dom \u7ED3\u6784</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#6E7781;">// \u786E\u4FDD\u6BCF\u6B21\u5E94\u7528\u52A0\u8F7D\u524D\u5BB9\u5668 dom \u7ED3\u6784\u5DF2\u7ECF\u8BBE\u7F6E\u5B8C\u6BD5</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#8250DF;">render</span><span style="color:#24292F;">(</span></span>
<span class="line"><span style="color:#24292F;">    {</span></span>
<span class="line"><span style="color:#24292F;">      element: initialAppWrapperElement,</span></span>
<span class="line"><span style="color:#24292F;">      loading: </span><span style="color:#0550AE;">true</span><span style="color:#24292F;">,</span></span>
<span class="line"><span style="color:#24292F;">      container: initialContainer,</span></span>
<span class="line"><span style="color:#24292F;">    },</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#0A3069;">&quot;loading&quot;</span></span>
<span class="line"><span style="color:#24292F;">  )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">initialAppWrapperGetter</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">getAppWrapperGetter</span><span style="color:#24292F;">(</span></span>
<span class="line"><span style="color:#24292F;">    appInstanceId,</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">!!</span><span style="color:#24292F;">legacyRender,</span></span>
<span class="line"><span style="color:#24292F;">    strictStyleIsolation,</span></span>
<span class="line"><span style="color:#24292F;">    scopedCSS,</span></span>
<span class="line"><span style="color:#24292F;">    () </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> initialAppWrapperElement</span></span>
<span class="line"><span style="color:#24292F;">  )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">let</span><span style="color:#24292F;"> global </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> globalContext</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">let</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">mountSandbox</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> () </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">Promise</span><span style="color:#24292F;">.</span><span style="color:#8250DF;">resolve</span><span style="color:#24292F;">()</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">let</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">unmountSandbox</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> () </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">Promise</span><span style="color:#24292F;">.</span><span style="color:#8250DF;">resolve</span><span style="color:#24292F;">()</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">useLooseSandbox</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">typeof</span><span style="color:#24292F;"> sandbox </span><span style="color:#CF222E;">===</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">&quot;object&quot;</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">&amp;&amp;</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">!!</span><span style="color:#24292F;">sandbox.loose</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">let</span><span style="color:#24292F;"> sandboxContainer</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">if</span><span style="color:#24292F;"> (sandbox) {</span></span>
<span class="line"><span style="color:#24292F;">    sandboxContainer </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">createSandboxContainer</span><span style="color:#24292F;">(</span></span>
<span class="line"><span style="color:#24292F;">      appInstanceId,</span></span>
<span class="line"><span style="color:#24292F;">      </span><span style="color:#6E7781;">// FIXME should use a strict sandbox logic while remount, see https://github.com/umijs/qiankun/issues/518</span></span>
<span class="line"><span style="color:#24292F;">      initialAppWrapperGetter,</span></span>
<span class="line"><span style="color:#24292F;">      scopedCSS,</span></span>
<span class="line"><span style="color:#24292F;">      useLooseSandbox,</span></span>
<span class="line"><span style="color:#24292F;">      excludeAssetFilter,</span></span>
<span class="line"><span style="color:#24292F;">      global</span></span>
<span class="line"><span style="color:#24292F;">    )</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#6E7781;">// \u7528\u6C99\u7BB1\u7684\u4EE3\u7406\u5BF9\u8C61\u4F5C\u4E3A\u63A5\u4E0B\u6765\u4F7F\u7528\u7684\u5168\u5C40\u5BF9\u8C61</span></span>
<span class="line"><span style="color:#24292F;">    global </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> sandboxContainer.instance.proxy </span><span style="color:#CF222E;">as</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">typeof</span><span style="color:#24292F;"> window</span></span>
<span class="line"><span style="color:#24292F;">    mountSandbox </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> sandboxContainer.mount</span></span>
<span class="line"><span style="color:#24292F;">    unmountSandbox </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> sandboxContainer.unmount</span></span>
<span class="line"><span style="color:#24292F;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> {</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#0550AE;">beforeUnmount</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> [],</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#0550AE;">afterUnmount</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> [],</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#0550AE;">afterMount</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> [],</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#0550AE;">beforeMount</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> [],</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#0550AE;">beforeLoad</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> [],</span></span>
<span class="line"><span style="color:#24292F;">  } </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">mergeWith</span><span style="color:#24292F;">({}, </span><span style="color:#8250DF;">getAddOns</span><span style="color:#24292F;">(global, assetPublicPath), lifeCycles, (</span><span style="color:#953800;">v1</span><span style="color:#24292F;">, </span><span style="color:#953800;">v2</span><span style="color:#24292F;">) </span><span style="color:#CF222E;">=&gt;</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#8250DF;">concat</span><span style="color:#24292F;">(v1 </span><span style="color:#CF222E;">??</span><span style="color:#24292F;"> [], v2 </span><span style="color:#CF222E;">??</span><span style="color:#24292F;"> [])</span></span>
<span class="line"><span style="color:#24292F;">  )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">await</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">execHooksChain</span><span style="color:#24292F;">(</span><span style="color:#8250DF;">toArray</span><span style="color:#24292F;">(beforeLoad), app, global)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#6E7781;">// get the lifecycle hooks from module exports</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">scriptExports</span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">any</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">await</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">execScripts</span><span style="color:#24292F;">(</span></span>
<span class="line"><span style="color:#24292F;">    global,</span></span>
<span class="line"><span style="color:#24292F;">    sandbox </span><span style="color:#CF222E;">&amp;&amp;</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">!</span><span style="color:#24292F;">useLooseSandbox</span></span>
<span class="line"><span style="color:#24292F;">  )</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> { </span><span style="color:#0550AE;">bootstrap</span><span style="color:#24292F;">, </span><span style="color:#0550AE;">mount</span><span style="color:#24292F;">, </span><span style="color:#0550AE;">unmount</span><span style="color:#24292F;">, </span><span style="color:#0550AE;">update</span><span style="color:#24292F;"> } </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">getLifecyclesFromExports</span><span style="color:#24292F;">(</span></span>
<span class="line"><span style="color:#24292F;">    scriptExports,</span></span>
<span class="line"><span style="color:#24292F;">    appName,</span></span>
<span class="line"><span style="color:#24292F;">    global,</span></span>
<span class="line"><span style="color:#24292F;">    sandboxContainer?.instance?.latestSetProp</span></span>
<span class="line"><span style="color:#24292F;">  )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> {</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#0550AE;">onGlobalStateChange</span><span style="color:#24292F;">,</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#0550AE;">setGlobalState</span><span style="color:#24292F;">,</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#0550AE;">offGlobalStateChange</span><span style="color:#24292F;">,</span></span>
<span class="line"><span style="color:#24292F;">  }</span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> </span><span style="color:#953800;">Record</span><span style="color:#24292F;">&lt;</span><span style="color:#0550AE;">string</span><span style="color:#24292F;">, </span><span style="color:#953800;">CallableFunction</span><span style="color:#24292F;">&gt; </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">getMicroAppStateActions</span><span style="color:#24292F;">(appInstanceId)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#6E7781;">// FIXME temporary way</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">syncAppWrapperElement2Sandbox</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> (</span><span style="color:#953800;">element</span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> </span><span style="color:#953800;">HTMLElement</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">|</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">null</span><span style="color:#24292F;">) </span><span style="color:#CF222E;">=&gt;</span></span>
<span class="line"><span style="color:#24292F;">    (initialAppWrapperElement </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> element)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">parcelConfigGetter</span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> </span><span style="color:#953800;">ParcelConfigObjectGetter</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> (</span></span>
<span class="line"><span style="color:#24292F;">    remountContainer </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#953800;">initialContainer</span></span>
<span class="line"><span style="color:#24292F;">  ) </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> {</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">let</span><span style="color:#24292F;"> appWrapperElement</span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> </span><span style="color:#953800;">HTMLElement</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">|</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">null</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">let</span><span style="color:#24292F;"> appWrapperGetter</span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> </span><span style="color:#953800;">ReturnType</span><span style="color:#24292F;">&lt;</span><span style="color:#CF222E;">typeof</span><span style="color:#24292F;"> getAppWrapperGetter&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">parcelConfig</span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> </span><span style="color:#953800;">ParcelConfigObject</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> {</span></span>
<span class="line"><span style="color:#24292F;">      name: appInstanceId,</span></span>
<span class="line"><span style="color:#24292F;">      bootstrap,</span></span>
<span class="line"><span style="color:#24292F;">      mount: [</span></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#CF222E;">async</span><span style="color:#24292F;"> () </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> {</span></span>
<span class="line"><span style="color:#24292F;">          </span><span style="color:#CF222E;">if</span><span style="color:#24292F;"> (p<wbr>rocess.env.</span><span style="color:#0550AE;">NODE_ENV</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">===</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">&quot;development&quot;</span><span style="color:#24292F;">) {</span></span>
<span class="line"><span style="color:#24292F;">            </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">marks</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">performanceGetEntriesByName</span><span style="color:#24292F;">(markName, </span><span style="color:#0A3069;">&quot;mark&quot;</span><span style="color:#24292F;">)</span></span>
<span class="line"><span style="color:#24292F;">            </span><span style="color:#6E7781;">// mark length is zero means the app is remounting</span></span>
<span class="line"><span style="color:#24292F;">            </span><span style="color:#CF222E;">if</span><span style="color:#24292F;"> (marks </span><span style="color:#CF222E;">&amp;&amp;</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">!</span><span style="color:#24292F;">marks.</span><span style="color:#0550AE;">length</span><span style="color:#24292F;">) {</span></span>
<span class="line"><span style="color:#24292F;">              </span><span style="color:#8250DF;">performanceMark</span><span style="color:#24292F;">(markName)</span></span>
<span class="line"><span style="color:#24292F;">            }</span></span>
<span class="line"><span style="color:#24292F;">          }</span></span>
<span class="line"><span style="color:#24292F;">        },</span></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#CF222E;">async</span><span style="color:#24292F;"> () </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> {</span></span>
<span class="line"><span style="color:#24292F;">          </span><span style="color:#CF222E;">if</span><span style="color:#24292F;"> (</span></span>
<span class="line"><span style="color:#24292F;">            (</span><span style="color:#CF222E;">await</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">validateSingularMode</span><span style="color:#24292F;">(singular, app)) </span><span style="color:#CF222E;">&amp;&amp;</span></span>
<span class="line"><span style="color:#24292F;">            prevAppUnmountedDeferred</span></span>
<span class="line"><span style="color:#24292F;">          ) {</span></span>
<span class="line"><span style="color:#24292F;">            </span><span style="color:#CF222E;">return</span><span style="color:#24292F;"> prevAppUnmountedDeferred.promise</span></span>
<span class="line"><span style="color:#24292F;">          }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">          </span><span style="color:#CF222E;">return</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">undefined</span></span>
<span class="line"><span style="color:#24292F;">        },</span></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#6E7781;">// initial wrapper element before app mount/remount</span></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#CF222E;">async</span><span style="color:#24292F;"> () </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> {</span></span>
<span class="line"><span style="color:#24292F;">          appWrapperElement </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> initialAppWrapperElement</span></span>
<span class="line"><span style="color:#24292F;">          appWrapperGetter </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">getAppWrapperGetter</span><span style="color:#24292F;">(</span></span>
<span class="line"><span style="color:#24292F;">            appInstanceId,</span></span>
<span class="line"><span style="color:#24292F;">            </span><span style="color:#CF222E;">!!</span><span style="color:#24292F;">legacyRender,</span></span>
<span class="line"><span style="color:#24292F;">            strictStyleIsolation,</span></span>
<span class="line"><span style="color:#24292F;">            scopedCSS,</span></span>
<span class="line"><span style="color:#24292F;">            () </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> appWrapperElement</span></span>
<span class="line"><span style="color:#24292F;">          )</span></span>
<span class="line"><span style="color:#24292F;">        },</span></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#6E7781;">// \u6DFB\u52A0 mount hook, \u786E\u4FDD\u6BCF\u6B21\u5E94\u7528\u52A0\u8F7D\u524D\u5BB9\u5668 dom \u7ED3\u6784\u5DF2\u7ECF\u8BBE\u7F6E\u5B8C\u6BD5</span></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#CF222E;">async</span><span style="color:#24292F;"> () </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> {</span></span>
<span class="line"><span style="color:#24292F;">          </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">useNewContainer</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> remountContainer </span><span style="color:#CF222E;">!==</span><span style="color:#24292F;"> initialContainer</span></span>
<span class="line"><span style="color:#24292F;">          </span><span style="color:#CF222E;">if</span><span style="color:#24292F;"> (useNewContainer </span><span style="color:#CF222E;">||</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">!</span><span style="color:#24292F;">appWrapperElement) {</span></span>
<span class="line"><span style="color:#24292F;">            </span><span style="color:#6E7781;">// element will be destroyed after unmounted, we need to recreate it if it not exist</span></span>
<span class="line"><span style="color:#24292F;">            </span><span style="color:#6E7781;">// or we try to remount into a new container</span></span>
<span class="line"><span style="color:#24292F;">            appWrapperElement </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">createElement</span><span style="color:#24292F;">(</span></span>
<span class="line"><span style="color:#24292F;">              appContent,</span></span>
<span class="line"><span style="color:#24292F;">              strictStyleIsolation,</span></span>
<span class="line"><span style="color:#24292F;">              scopedCSS,</span></span>
<span class="line"><span style="color:#24292F;">              appInstanceId</span></span>
<span class="line"><span style="color:#24292F;">            )</span></span>
<span class="line"><span style="color:#24292F;">            </span><span style="color:#8250DF;">syncAppWrapperElement2Sandbox</span><span style="color:#24292F;">(appWrapperElement)</span></span>
<span class="line"><span style="color:#24292F;">          }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">          </span><span style="color:#8250DF;">render</span><span style="color:#24292F;">(</span></span>
<span class="line"><span style="color:#24292F;">            {</span></span>
<span class="line"><span style="color:#24292F;">              element: appWrapperElement,</span></span>
<span class="line"><span style="color:#24292F;">              loading: </span><span style="color:#0550AE;">true</span><span style="color:#24292F;">,</span></span>
<span class="line"><span style="color:#24292F;">              container: remountContainer,</span></span>
<span class="line"><span style="color:#24292F;">            },</span></span>
<span class="line"><span style="color:#24292F;">            </span><span style="color:#0A3069;">&quot;mounting&quot;</span></span>
<span class="line"><span style="color:#24292F;">          )</span></span>
<span class="line"><span style="color:#24292F;">        },</span></span>
<span class="line"><span style="color:#24292F;">        mountSandbox,</span></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#6E7781;">// exec the chain after rendering to keep the behavior with beforeLoad</span></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#CF222E;">async</span><span style="color:#24292F;"> () </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">execHooksChain</span><span style="color:#24292F;">(</span><span style="color:#8250DF;">toArray</span><span style="color:#24292F;">(beforeMount), app, global),</span></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#CF222E;">async</span><span style="color:#24292F;"> (</span><span style="color:#953800;">props</span><span style="color:#24292F;">) </span><span style="color:#CF222E;">=&gt;</span></span>
<span class="line"><span style="color:#24292F;">          </span><span style="color:#8250DF;">mount</span><span style="color:#24292F;">({</span></span>
<span class="line"><span style="color:#24292F;">            </span><span style="color:#CF222E;">...</span><span style="color:#24292F;">props,</span></span>
<span class="line"><span style="color:#24292F;">            container: </span><span style="color:#8250DF;">appWrapperGetter</span><span style="color:#24292F;">(),</span></span>
<span class="line"><span style="color:#24292F;">            setGlobalState,</span></span>
<span class="line"><span style="color:#24292F;">            onGlobalStateChange,</span></span>
<span class="line"><span style="color:#24292F;">          }),</span></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#6E7781;">// finish loading after app mounted</span></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#CF222E;">async</span><span style="color:#24292F;"> () </span><span style="color:#CF222E;">=&gt;</span></span>
<span class="line"><span style="color:#24292F;">          </span><span style="color:#8250DF;">render</span><span style="color:#24292F;">(</span></span>
<span class="line"><span style="color:#24292F;">            {</span></span>
<span class="line"><span style="color:#24292F;">              element: appWrapperElement,</span></span>
<span class="line"><span style="color:#24292F;">              loading: </span><span style="color:#0550AE;">false</span><span style="color:#24292F;">,</span></span>
<span class="line"><span style="color:#24292F;">              container: remountContainer,</span></span>
<span class="line"><span style="color:#24292F;">            },</span></span>
<span class="line"><span style="color:#24292F;">            </span><span style="color:#0A3069;">&quot;mounted&quot;</span></span>
<span class="line"><span style="color:#24292F;">          ),</span></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#CF222E;">async</span><span style="color:#24292F;"> () </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">execHooksChain</span><span style="color:#24292F;">(</span><span style="color:#8250DF;">toArray</span><span style="color:#24292F;">(afterMount), app, global),</span></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#6E7781;">// initialize the unmount defer after app mounted and resolve the defer after it unmounted</span></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#CF222E;">async</span><span style="color:#24292F;"> () </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> {</span></span>
<span class="line"><span style="color:#24292F;">          </span><span style="color:#CF222E;">if</span><span style="color:#24292F;"> (</span><span style="color:#CF222E;">await</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">validateSingularMode</span><span style="color:#24292F;">(singular, app)) {</span></span>
<span class="line"><span style="color:#24292F;">            prevAppUnmountedDeferred </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">new</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">Deferred</span><span style="color:#24292F;">&lt;</span><span style="color:#0550AE;">void</span><span style="color:#24292F;">&gt;()</span></span>
<span class="line"><span style="color:#24292F;">          }</span></span>
<span class="line"><span style="color:#24292F;">        },</span></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#CF222E;">async</span><span style="color:#24292F;"> () </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> {</span></span>
<span class="line"><span style="color:#24292F;">          </span><span style="color:#CF222E;">if</span><span style="color:#24292F;"> (p<wbr>rocess.env.</span><span style="color:#0550AE;">NODE_ENV</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">===</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">&quot;development&quot;</span><span style="color:#24292F;">) {</span></span>
<span class="line"><span style="color:#24292F;">            </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">measureName</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">\`[qiankun] App \${</span><span style="color:#24292F;">appInstanceId</span><span style="color:#0A3069;">} Loading Consuming\`</span></span>
<span class="line"><span style="color:#24292F;">            </span><span style="color:#8250DF;">performanceMeasure</span><span style="color:#24292F;">(measureName, markName)</span></span>
<span class="line"><span style="color:#24292F;">          }</span></span>
<span class="line"><span style="color:#24292F;">        },</span></span>
<span class="line"><span style="color:#24292F;">      ],</span></span>
<span class="line"><span style="color:#24292F;">      unmount: [</span></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#CF222E;">async</span><span style="color:#24292F;"> () </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">execHooksChain</span><span style="color:#24292F;">(</span><span style="color:#8250DF;">toArray</span><span style="color:#24292F;">(beforeUnmount), app, global),</span></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#CF222E;">async</span><span style="color:#24292F;"> (</span><span style="color:#953800;">props</span><span style="color:#24292F;">) </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">unmount</span><span style="color:#24292F;">({ </span><span style="color:#CF222E;">...</span><span style="color:#24292F;">props, container: </span><span style="color:#8250DF;">appWrapperGetter</span><span style="color:#24292F;">() }),</span></span>
<span class="line"><span style="color:#24292F;">        unmountSandbox,</span></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#CF222E;">async</span><span style="color:#24292F;"> () </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">execHooksChain</span><span style="color:#24292F;">(</span><span style="color:#8250DF;">toArray</span><span style="color:#24292F;">(afterUnmount), app, global),</span></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#CF222E;">async</span><span style="color:#24292F;"> () </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> {</span></span>
<span class="line"><span style="color:#24292F;">          </span><span style="color:#8250DF;">render</span><span style="color:#24292F;">(</span></span>
<span class="line"><span style="color:#24292F;">            { element: </span><span style="color:#0550AE;">null</span><span style="color:#24292F;">, loading: </span><span style="color:#0550AE;">false</span><span style="color:#24292F;">, container: remountContainer },</span></span>
<span class="line"><span style="color:#24292F;">            </span><span style="color:#0A3069;">&quot;unmounted&quot;</span></span>
<span class="line"><span style="color:#24292F;">          )</span></span>
<span class="line"><span style="color:#24292F;">          </span><span style="color:#8250DF;">offGlobalStateChange</span><span style="color:#24292F;">(appInstanceId)</span></span>
<span class="line"><span style="color:#24292F;">          </span><span style="color:#6E7781;">// for gc</span></span>
<span class="line"><span style="color:#24292F;">          appWrapperElement </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">null</span></span>
<span class="line"><span style="color:#24292F;">          </span><span style="color:#8250DF;">syncAppWrapperElement2Sandbox</span><span style="color:#24292F;">(appWrapperElement)</span></span>
<span class="line"><span style="color:#24292F;">        },</span></span>
<span class="line"><span style="color:#24292F;">        </span><span style="color:#CF222E;">async</span><span style="color:#24292F;"> () </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> {</span></span>
<span class="line"><span style="color:#24292F;">          </span><span style="color:#CF222E;">if</span><span style="color:#24292F;"> (</span></span>
<span class="line"><span style="color:#24292F;">            (</span><span style="color:#CF222E;">await</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">validateSingularMode</span><span style="color:#24292F;">(singular, app)) </span><span style="color:#CF222E;">&amp;&amp;</span></span>
<span class="line"><span style="color:#24292F;">            prevAppUnmountedDeferred</span></span>
<span class="line"><span style="color:#24292F;">          ) {</span></span>
<span class="line"><span style="color:#24292F;">            prevAppUnmountedDeferred.</span><span style="color:#8250DF;">resolve</span><span style="color:#24292F;">()</span></span>
<span class="line"><span style="color:#24292F;">          }</span></span>
<span class="line"><span style="color:#24292F;">        },</span></span>
<span class="line"><span style="color:#24292F;">      ],</span></span>
<span class="line"><span style="color:#24292F;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">if</span><span style="color:#24292F;"> (</span><span style="color:#CF222E;">typeof</span><span style="color:#24292F;"> update </span><span style="color:#CF222E;">===</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">&quot;function&quot;</span><span style="color:#24292F;">) {</span></span>
<span class="line"><span style="color:#24292F;">      parcelConfig.update </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> update</span></span>
<span class="line"><span style="color:#24292F;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">return</span><span style="color:#24292F;"> parcelConfig</span></span>
<span class="line"><span style="color:#24292F;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">return</span><span style="color:#24292F;"> parcelConfigGetter</span></span>
<span class="line"><span style="color:#24292F;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),o=[e];function c(r,t){return n(),a("div",null,o)}const y=s(p,[["render",c],["__file","2.qiankun2.html.vue"]]);export{y as default};
