import{_ as s,o as n,c as a,a as l}from"./app.8390b8a1.js";const p={},o=l(`<h1 id="app-ceateappapi" tabindex="-1"><a class="header-anchor" href="#app-ceateappapi" aria-hidden="true">#</a> app\uFF08ceateAppApi\uFF09</h1><p>createAppAPI \u7684\u6838\u5FC3\u4F5C\u7528\u5C31\u662F\u751F\u6210 app\uFF0C\u91CC\u9762\u5305\u542B\u4E00\u4E9B\u5E38\u89C1\u7684\u65B9\u6CD5\uFF08use\u3001component...\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="shiki" style="background-color:#ffffff;"><code><span class="line"><span style="color:#CF222E;">export</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">function</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">createAppAPI</span><span style="color:#24292F;">(</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#953800;">render</span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> </span><span style="color:#953800;">RootRenderFunction</span><span style="color:#24292F;">,</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#953800;">hydrate</span><span style="color:#CF222E;">?:</span><span style="color:#24292F;"> </span><span style="color:#953800;">RootHydrateFunction</span></span>
<span class="line"><span style="color:#24292F;">) {</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#CF222E;">return</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">function</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">createApp</span><span style="color:#24292F;">(</span><span style="color:#953800;">rootComponent</span><span style="color:#24292F;">, </span><span style="color:#953800;">rootProps</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">null</span><span style="color:#24292F;">) {</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">app</span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> </span><span style="color:#953800;">App</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> (context.app </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> {</span></span>
<span class="line"><span style="color:#24292F;">      </span><span style="color:#8250DF;">use</span><span style="color:#24292F;">(</span><span style="color:#953800;">plugin</span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> </span><span style="color:#953800;">Plugin</span><span style="color:#24292F;">, </span><span style="color:#CF222E;">...</span><span style="color:#953800;">options</span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">any</span><span style="color:#24292F;">[]) {},</span></span>
<span class="line"><span style="color:#24292F;">      </span><span style="color:#8250DF;">mixin</span><span style="color:#24292F;">(</span><span style="color:#953800;">mixin</span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> </span><span style="color:#953800;">ComponentOptions</span><span style="color:#24292F;">) {},</span></span>
<span class="line"><span style="color:#24292F;">      </span><span style="color:#8250DF;">component</span><span style="color:#24292F;">(</span><span style="color:#953800;">name</span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">string</span><span style="color:#24292F;">, </span><span style="color:#953800;">component</span><span style="color:#CF222E;">?:</span><span style="color:#24292F;"> </span><span style="color:#953800;">Component</span><span style="color:#24292F;">)</span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">any</span><span style="color:#24292F;"> {},</span></span>
<span class="line"><span style="color:#24292F;">      </span><span style="color:#8250DF;">directive</span><span style="color:#24292F;">() {},</span></span>
<span class="line"><span style="color:#24292F;">      </span><span style="color:#8250DF;">mount</span><span style="color:#24292F;">(){},</span></span>
<span class="line"><span style="color:#24292F;">      </span><span style="color:#8250DF;">unmount</span><span style="color:#24292F;">() {},</span></span>
<span class="line"><span style="color:#24292F;">      </span><span style="color:#8250DF;">provide</span><span style="color:#24292F;">(</span><span style="color:#953800;">key</span><span style="color:#24292F;">, </span><span style="color:#953800;">value</span><span style="color:#24292F;">) {}</span></span>
<span class="line"><span style="color:#24292F;">    })</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">return</span><span style="color:#24292F;"> app</span></span>
<span class="line"><span style="color:#24292F;">  }</span></span>
<span class="line"><span style="color:#24292F;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),e=[o];function c(r,t){return n(),a("div",null,e)}const y=s(p,[["render",c],["__file","3.initMixin.html.vue"]]);export{y as default};
